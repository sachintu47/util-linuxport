diff --git a/configure.ac b/configure.ac
index a5d9102..3c1bf92 100644
--- a/configure.ac
+++ b/configure.ac
@@ -936,11 +936,10 @@ AC_ARG_WITH([util], AS_HELP_STRING([--without-util], [compile without libutil]),
 AS_IF([test "x$with_util" = xno], [
   AM_CONDITIONAL([HAVE_UTIL], [false])
   have_util=no
-], [
-  UL_CHECK_LIB([util], [openpty])
-])
+] )
+UL_CHECK_LIB([zoslib], [openpty])
 
-AS_IF([test "x$have_pty_h" = xyes && test "x$have_sys_signalfd_h" = xyes && test "x$have_util" = xyes], [
+AS_IF([test "x$have_pty_h" = xyes && test "x$have_sys_signalfd_h" = xyes && test "x$have_zoslib" = xyes], [
    AM_CONDITIONAL([HAVE_PTY], [true])
    AC_DEFINE([HAVE_PTY], [1], [have PTY support])
    have_pty=yes
@@ -2104,8 +2103,11 @@ UL_REQUIRES_LINUX([pivot_root])
 UL_REQUIRES_SYSCALL_CHECK([pivot_root], [UL_CHECK_SYSCALL([pivot_root])])
 AM_CONDITIONAL([BUILD_PIVOT_ROOT], [test "x$build_pivot_root" = xyes])
 
-
-UL_BUILD_INIT([flock], [check])
+AC_ARG_ENABLE([flock],
+  AS_HELP_STRING([--disable-flock], [do not build flock]),
+  [], [UL_DEFAULT_ENABLE([flock], [check])]
+)
+UL_BUILD_INIT([flock])
 UL_REQUIRES_HAVE([flock], [timer], [timer_create/setitimer function])
 AM_CONDITIONAL([BUILD_FLOCK], [test "x$build_flock" = xyes])
 
@@ -2201,7 +2203,11 @@ UL_REQUIRES_BUILD([lsns], [libsmartcols])
 UL_REQUIRES_BUILD([lsns], [libmount])
 AM_CONDITIONAL([BUILD_LSNS], [test "x$build_lsns" = xyes])
 
-UL_BUILD_INIT([renice], [yes])
+AC_ARG_ENABLE([renice],
+  AS_HELP_STRING([--disable-renice], [do not build renice]),
+  [], [UL_DEFAULT_ENABLE([renice], [check])]
+)
+UL_BUILD_INIT([renice])
 AM_CONDITIONAL([BUILD_RENICE], [test "x$build_renice" = xyes])
 
 
@@ -2218,7 +2224,12 @@ AM_CONDITIONAL([BUILD_RFKILL], [test "x$build_rfkill" = xyes])
 UL_BUILD_INIT([setpgid], [yes])
 AM_CONDITIONAL([BUILD_SETPGID], [test "x$build_setpgid" = xyes])
 
-UL_BUILD_INIT([setsid], [yes])
+AC_ARG_ENABLE([setsid],
+  AS_HELP_STRING([--disable-setsid], [do not build column]),
+  [], [UL_DEFAULT_ENABLE([setsid], [check])]
+)
+
+UL_BUILD_INIT([setsid])
 AM_CONDITIONAL([BUILD_SETSID], [test "x$build_setsid" = xyes])
 
 UL_BUILD_INIT([readprofile], [check])
@@ -2296,7 +2307,7 @@ AC_ARG_ENABLE([scriptutils],
 
 UL_ENABLE_ALIAS([script], [scriptutils])
 UL_BUILD_INIT([script])
-UL_REQUIRES_HAVE([script], [pty], [openpty function (libutil)])
+UL_REQUIRES_HAVE([script], [pty], [openpty function (zoslib)])
 AM_CONDITIONAL([BUILD_SCRIPT], [test "x$build_script" = xyes])
 
 UL_ENABLE_ALIAS([scriptreplay], [scriptutils])
@@ -2305,7 +2316,7 @@ AM_CONDITIONAL([BUILD_SCRIPTREPLAY], [test "x$build_scriptreplay" = xyes])
 
 UL_ENABLE_ALIAS([scriptlive], [scriptutils])
 UL_BUILD_INIT([scriptlive])
-UL_REQUIRES_HAVE([scriptlive], [pty], [openpty function (libutil)])
+UL_REQUIRES_HAVE([scriptlive], [pty], [openpty function (zoslib)])
 AM_CONDITIONAL([BUILD_SCRIPTLIVE], [test "x$build_scriptlive" = xyes])
 
 
@@ -2322,7 +2333,12 @@ AM_CONDITIONAL([BUILD_COLCRT], [test "x$build_colcrt" = xyes])
 UL_BUILD_INIT([colrm], [yes])
 AM_CONDITIONAL([BUILD_COLRM], [test "x$build_colrm" = xyes])
 
-UL_BUILD_INIT([column], [check])
+AC_ARG_ENABLE([column],
+  AS_HELP_STRING([--disable-column], [do not build column]),
+  [], [UL_DEFAULT_ENABLE([column], [check])]
+)
+
+UL_BUILD_INIT([column])
 UL_REQUIRES_BUILD([column], [libsmartcols])
 AM_CONDITIONAL([BUILD_COLUMN], [test "x$build_column" = xyes])
 
@@ -2351,7 +2367,7 @@ AC_ARG_ENABLE([kill],
   [], [UL_DEFAULT_ENABLE([kill], [check])]
 )
 UL_BUILD_INIT([kill])
-UL_REQUIRES_LINUX([kill])
+#UL_REQUIRES_LINUX([kill])
 AM_CONDITIONAL([BUILD_KILL], [test "x$build_kill" = xyes])
 
 
@@ -2683,7 +2699,7 @@ AC_ARG_ENABLE([write],
 )
 UL_BUILD_INIT([write])
 UL_REQUIRES_HAVE([write], [utmpx_h], [utmpx.h header])
-UL_REQUIRES_HAVE([write], [gnu_utmpx], [GNU utmpx functions])
+#UL_REQUIRES_HAVE([write], [gnu_utmpx], [GNU utmpx functions])
 AM_CONDITIONAL([BUILD_WRITE], [test "x$build_write" = xyes])
 
 
