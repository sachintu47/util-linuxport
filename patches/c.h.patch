diff --git a/include/c.h b/include/c.h
index dcb2d683c..5fad3aefa 100644
--- a/include/c.h
+++ b/include/c.h
@@ -429,6 +429,7 @@ static inline int xusleep(useconds_t usec)
 #endif
 }
 
+extern int dprintf (int, const char *, ...);
 /* ul_sig_printf is signal safe as long you don't use floating point formats,
    positional arguments or wide characters.*/
 #define ul_sig_printf(fmt, ...) ignore_result(dprintf(STDERR_FILENO, fmt, __VA_ARGS__))
@@ -583,15 +584,24 @@ static inline int fputsln(const char *s, FILE *stream) {
 #define SINT_MAX(t) (((t)1 << (sizeof(t) * 8 - 2)) - (t)1 + ((t)1 << (sizeof(t) * 8 - 2)))
 
 #ifndef HAVE_REALLOCARRAY
-static inline void *reallocarray(void *ptr, size_t nmemb, size_t size)
+static inline void *reallocarray(void *ptr, size_t nmemb, size_t size) 
 {
-	size_t s = nmemb * size;
-
-	if (nmemb != 0 && s / nmemb != size) {
-		errno = ENOMEM;
-		return NULL;
-	}
-	return realloc(ptr, s);
+    // Check for multiplication overflow
+    if (nmemb > 0 && SIZE_MAX / nmemb < size) {
+        // Multiplication would overflow
+	errno = ENOMEM;
+        return NULL;
+    }
+
+    size_t s = nmemb * size;
+
+    // Check for size_t overflow
+    if (nmemb > 0 && s / nmemb != size) {
+        // Overflow detected
+	errno = ENOMEM;
+        return NULL;
+    }
+    return realloc(ptr, s);
 }
 #endif
 
